services:
  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: diver
      POSTGRES_PASSWORD: diving123
      POSTGRES_DB: diving_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U diver -d diving_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    command: >
      sh -c "python -m app.scripts.init_db &&
             uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - ./backend:/app
    environment:
      DATABASE_URL: postgresql://diver:diving123@db:5432/diving_db
      JWT_SECRET_KEY: your-production-secret-key-should-be-very-long-and-random
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      CORS_ORIGINS: http://localhost:3000
      DEBUG: "False"
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=development
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data: